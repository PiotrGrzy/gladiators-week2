{"version":3,"sources":["context/store.js","components/SelectBox/SelectBox.js","components/onlyWithAuthedUser/Login.js","components/onlyWithAuthedUser/onlyWithAuthedUser.js","components/onOutsideClickHOC/onOutsideClickHOC.js","App.js","index.js"],"names":["INITIAL_STATE","user","email","password","isAuthed","store","createContext","Provider","UserStateProvider","children","useReducer","state","action","type","dispatch","value","options","SelectBox","useState","setValue","className","onChange","e","target","map","option","key","focusable","viewBox","width","height","d","Login","placeholder","onlyWithAuthedUser","Component","props","hasOwnProperty","name","outsideClickHOC","waitingOnClickOutside","setWaitingOnClickOutside","ref","useRef","useEffect","document","addEventListener","clickListener","removeEventListener","current","contains","id","onClick","TestComponent","App","useContext","AuthorizedComponent","OutsideClickComponent","onOutsideClickHOC","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f6e330cd.chunk.js","sourcesContent":["import React, { createContext, useReducer } from 'react';\r\n\r\nconst INITIAL_STATE = {\r\n  user: {\r\n    email: '',\r\n    password: '',\r\n  },\r\n  isAuthed: true,\r\n};\r\n\r\nconst store = createContext(INITIAL_STATE);\r\nconst { Provider } = store;\r\n\r\nconst UserStateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case 'LOGIN_USER':\r\n        return {\r\n          user: {\r\n            email: 'joe@doe.com',\r\n            password: '123abc',\r\n          },\r\n          isAuthed: true,\r\n        };\r\n      case 'LOGOUT_USER':\r\n        return {\r\n          user: {\r\n            email: '',\r\n            password: '',\r\n          },\r\n          isAuthed: false,\r\n        };\r\n      case 'INVALID_STORE':\r\n        return {\r\n          user: {\r\n            email: 'joe@doe.com',\r\n          },\r\n          isAuthed: true,\r\n        };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }, INITIAL_STATE);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, UserStateProvider };\r\n","import React, { useState } from 'react';\r\nimport './select-box.css';\r\nconst options = [\r\n  'Select an Option',\r\n  'First Option',\r\n  'Second Option',\r\n  'Third Option',\r\n];\r\n\r\nconst SelectBox = () => {\r\n  const [value, setValue] = useState('Select an Option');\r\n\r\n  const handleChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"selectBox\">\r\n      <select value={value} onChange={handleChange}>\r\n        {options.map((option) => {\r\n          return (\r\n            <option value={option} key={option}>\r\n              {option}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n      <div className=\"select-icon\">\r\n        <svg\r\n          focusable=\"false\"\r\n          viewBox=\"0 0 104 128\"\r\n          width=\"25\"\r\n          height=\"35\"\r\n          className=\"icon\"\r\n        >\r\n          <path d=\"m2e1 95a9 9 0 0 1 -9 9 9 9 0 0 1 -9 -9 9 9 0 0 1 9 -9 9 9 0 0 1 9 9zm0-3e1a9 9 0 0 1 -9 9 9 9 0 0 1 -9 -9 9 9 0 0 1 9 -9 9 9 0 0 1 9 9zm0-3e1a9 9 0 0 1 -9 9 9 9 0 0 1 -9 -9 9 9 0 0 1 9 -9 9 9 0 0 1 9 9zm14 55h68v1e1h-68zm0-3e1h68v1e1h-68zm0-3e1h68v1e1h-68z\"></path>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default SelectBox;\r\n","import React from 'react';\r\n\r\nfunction Login() {\r\n  return (\r\n    <div>\r\n      <p>You must be signed in to view this content</p>\r\n      <form action=\"\" className=\"form\">\r\n        <input type=\"text\" placeholder=\"Login\" />\r\n        <input type=\"password\" placeholder=\"Password\" />\r\n        <button>Sign In</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","// stwórz HOCa onlyWithAuthedUser, który korzysta z mockedStore\r\nimport React from 'react';\r\nimport Login from './Login';\r\n\r\nconst onlyWithAuthedUser = (Component, store) => (props) => {\r\n  const checkStoreStructure = () =>\r\n    store.hasOwnProperty('user') &&\r\n    store.hasOwnProperty('isAuthed') &&\r\n    store.user.hasOwnProperty('email') &&\r\n    store.user.hasOwnProperty('password');\r\n\r\n  if (!checkStoreStructure())\r\n    return (\r\n      <div className=\"warning\">\r\n        Invalid store data format in component: {Component.name}\r\n      </div>\r\n    );\r\n\r\n  return <div>{store.isAuthed ? <Component {...props} /> : <Login />}</div>;\r\n};\r\nexport default onlyWithAuthedUser;\r\n// Przetestuj poniższe test casy:\r\n// jeśli w mockedStore użytkownik ma pusty email i password\r\n// i nie jest zalogowany (isAuthed === false) to HOC ma pokazać komponent Login gdzie jakoś wyświetli dane {email, password}\r\n\r\n// jeśli jest zalogowany (isAuthed === true) to HOC pokaże Component\r\n// jeśli store nie ma poprawnego formatu, pokaże komponent Error z odpowiednią informacją, że store na komponencie Component.name się zepsuł\r\n","// Stwórz HOCa outsideClickHOC, który bedzie działać np z customowymi\r\n// componentami typu dropdown lub select:\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport './styles.css';\r\n\r\nconst outsideClickHOC = (Component) => (props) => {\r\n  const [waitingOnClickOutside, setWaitingOnClickOutside] = useState(false);\r\n  const ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', clickListener);\r\n    return () => {\r\n      document.removeEventListener('click', clickListener);\r\n    };\r\n  }, []);\r\n\r\n  const clickListener = (e) => {\r\n    if (!ref.current.contains(e.target)) {\r\n      setWaitingOnClickOutside(false);\r\n    }\r\n  };\r\n\r\n  const onStartListeningClickOutside = (e) => {\r\n    setWaitingOnClickOutside(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        id=\"backdrop\"\r\n        onClick={clickListener}\r\n        className={waitingOnClickOutside ? 'backDrop-on' : 'backDrop-off'}\r\n      ></div>\r\n      <div\r\n        className={\r\n          waitingOnClickOutside ? 'container withBackDrop' : 'container'\r\n        }\r\n        ref={ref}\r\n        onClick={onStartListeningClickOutside}\r\n      >\r\n        {<Component {...props} />}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// który będzie działać wg poniższych wytycznych:\r\n// - będzie do owrapowanego komponentu dodawać propsy oraz działanie:\r\n\r\n// działanie 1:\r\n// -- prop - onStartListeningClickOutside\r\n// --- jeśli ta funkcja zostanie wywołana dany komponent zyskuje z-index najwyższy na stronie\r\n// --- pod komponentem pojawia się półprzeźroczyste ciemne tło, w które można kliknąć zamykając komponent\r\n\r\n// działanie 2:\r\n// -- prop - waitingOnClickOutside\r\n// --- zwraca true/false jeśli została wywołana metoda onStartListeningClickOutside\r\n\r\n// działanie 3:\r\n// -- prop onClickOutside\r\n// --- jesli ta funkcja zostanie wywołana komponent wraca na swoje miejsce z odpowiednim z-index\r\n// --- znika półprzeźroczyste szare tło spod komponentu\r\n\r\nexport default outsideClickHOC;\r\n","import React, { useContext } from 'react';\r\nimport { store } from './context/store';\r\nimport SelectBox from './components/SelectBox/SelectBox';\r\nimport onlyWithAuthedUser from './components/onlyWithAuthedUser/onlyWithAuthedUser';\r\nimport onOutsideClickHOC from './components/onOutsideClickHOC/onOutsideClickHOC';\r\n\r\nconst TestComponent = () => {\r\n  return <div>Private Component Content</div>;\r\n};\r\n\r\nfunction App() {\r\n  const { state, dispatch } = useContext(store);\r\n\r\n  const AuthorizedComponent = onlyWithAuthedUser(TestComponent, state);\r\n  const OutsideClickComponent = onOutsideClickHOC(SelectBox);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"result\">\r\n        <h3> Private Component wrapped in onlyWithAuthedUser HOC:</h3>\r\n        <div className=\"options\">\r\n          <span>Store options: </span>\r\n          <button onClick={() => dispatch({ type: 'LOGIN_USER' })}>\r\n            AUTHORIZED\r\n          </button>\r\n          <button onClick={() => dispatch({ type: 'LOGOUT_USER' })}>\r\n            UNAUTHORIZED\r\n          </button>\r\n          <button onClick={() => dispatch({ type: 'INVALID_STORE' })}>\r\n            INVALID STORE DATA\r\n          </button>\r\n        </div>\r\n        <fieldset className=\"output\">\r\n          <legend>Output</legend>\r\n          <AuthorizedComponent />\r\n        </fieldset>\r\n      </div>\r\n      <div className=\"result\">\r\n        <h3> Custom Select Component wrapped in onOutsideClick HOC:</h3>\r\n        <OutsideClickComponent />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { UserStateProvider } from './context/store';\r\n\r\nReactDOM.render(\r\n  <UserStateProvider>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </UserStateProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}